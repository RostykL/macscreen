{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport default function useBurger(url) {\n  _s();\n\n  const [burgers, setBurgers] = useState([]);\n  const [error, setError] = useState({\n    msg: \"\",\n    status: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(url).then(res => res.json()).then(res => {\n      setIsLoading(false);\n      setBurgers(res);\n    }).catch(e => {\n      setIsLoading(true);\n      setError({\n        msg: \"Виникла помилка\" + e,\n        status: true\n      });\n    });\n  }, [url]);\n  return {\n    burgers,\n    error,\n    isLoading\n  };\n}\n\n_s(useBurger, \"GM32AC75K4EtiWKt06XNUI1YfKo=\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/hooks/useBurger.js"],"names":["React","useEffect","useState","useBurger","url","burgers","setBurgers","error","setError","msg","status","isLoading","setIsLoading","fetch","then","res","json","catch","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAAEO,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CAACT,GAAD,CAAL,CACGU,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,MAAAA,UAAU,CAACS,GAAD,CAAV;AACD,KALH,EAMGE,KANH,CAMUC,CAAD,IAAO;AACZN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,GAAG,EAAE,oBAAoBS,CAA3B;AAA8BR,QAAAA,MAAM,EAAE;AAAtC,OAAD,CAAR;AACD,KATH;AAUD,GAZQ,EAYN,CAACN,GAAD,CAZM,CAAT;AAcA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBI,IAAAA;AAAlB,GAAP;AACD;;GApBuBR,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function useBurger(url) {\n  const [burgers, setBurgers] = useState([]);\n  const [error, setError] = useState({ msg: \"\", status: false });\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setIsLoading(false);\n        setBurgers(res);\n      })\n      .catch((e) => {\n        setIsLoading(true);\n        setError({ msg: \"Виникла помилка\" + e, status: true });\n      });\n  }, [url]);\n\n  return { burgers, error, isLoading };\n}\n"]},"metadata":{},"sourceType":"module"}