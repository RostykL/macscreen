{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients, IngridientWrapper, BurgerDetails, DetailsTitle, IngridientsDetails } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/useToppings\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  const {\n    burger,\n    setBurger\n  } = useContext(BurgerContext);\n  const [updBurger, setUpdBurger] = useState({});\n  const {\n    toppings,\n    error,\n    isLoading\n  } = useToppings(\"http://localhost:3000/toppings\", burger ? burger.consists_of : []);\n  const [qtyOneToppings, setToppingsOne] = useState([]);\n  useEffect(() => {\n    if (!isLoading) {\n      let arr = toppings.filter(el => el.quantity === 1);\n      console.log(arr);\n      setToppingsOne(arr);\n    }\n  }, [toppings, isLoading]);\n  useEffect(() => {\n    console.log(updBurger, 'burger');\n  }, [updBurger]);\n  useEffect(() => {\n    setBurger(JSON.parse(localStorage.getItem(\"burger\")));\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isLoading) return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(BurgerIngridients, {\n          children: toppings && toppings.map(({\n            name,\n            quantity,\n            id\n          }) => {\n            return /*#__PURE__*/_jsxDEV(Ingridient, {\n              text: name,\n              setBurger: setUpdBurger,\n              initValue: quantity\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BurgerDetails, {\n          children: [/*#__PURE__*/_jsxDEV(DetailsTitle, {\n            children: [burger.name, \" | \\u0456\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0456\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IngridientsDetails, {\n            children: toppings.map(el => {\n              return /*#__PURE__*/_jsxDEV(IngridientdetailBlock, {\n                text: el.name,\n                price: el.quantity * el.cost\n              }, el.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Index, \"BKBJU7iX4oxq+rNFz1543JUPY0g=\", false, function () {\n  return [useToppings];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","useContext","Wrapper","Menu","MenuTitle","BurgerIngridients","IngridientWrapper","BurgerDetails","DetailsTitle","IngridientsDetails","Ingridient","BurgerContext","useToppings","IngridientdetailBlock","Index","burger","setBurger","updBurger","setUpdBurger","toppings","error","isLoading","consists_of","qtyOneToppings","setToppingsOne","arr","filter","el","quantity","console","log","JSON","parse","localStorage","getItem","name","map","id","cost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\n\nimport {\n  BurgerIngridients,\n  IngridientWrapper,\n  BurgerDetails,\n  DetailsTitle,\n  IngridientsDetails,\n} from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\n\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/useToppings\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\n\nexport default function Index() {\n  const { burger, setBurger } = useContext(BurgerContext);\n  const [updBurger, setUpdBurger] = useState({})\n  \n  const { toppings, error, isLoading } = useToppings(\n    \"http://localhost:3000/toppings\",\n    burger ? burger.consists_of : []\n  );\n  const [qtyOneToppings, setToppingsOne] = useState([]);\n\n  useEffect(() => {\n    if (!isLoading) {\n      let arr = toppings.filter((el) => el.quantity === 1);\n      console.log(arr)\n      setToppingsOne(arr);\n    }\n  }, [toppings, isLoading]);\n\n  useEffect(() => {\n    console.log(updBurger, 'burger')\n  }, [updBurger])\n\n  useEffect(() => {\n    setBurger(JSON.parse(localStorage.getItem(\"burger\")));\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <Menu>Loading...</Menu>\n      </Wrapper>\n    );\n  }\n\n  if (!isLoading)\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger.name}</MenuTitle>\n          <IngridientWrapper>\n            <BurgerIngridients>\n              {toppings &&\n                toppings.map(({ name, quantity, id }) => {\n                  return (\n                    <Ingridient key={id} text={name} setBurger={setUpdBurger} initValue={quantity} />\n                  );\n                })}\n            </BurgerIngridients>\n            <BurgerDetails>\n              <DetailsTitle>{burger.name} | інформація</DetailsTitle>\n              <IngridientsDetails>\n                {toppings.map((el) => {\n                  return (\n                    <IngridientdetailBlock key={el.id} text={el.name} price={el.quantity * el.cost}></IngridientdetailBlock>\n                  );\n                })}\n              </IngridientsDetails>\n            </BurgerDetails>\n          </IngridientWrapper>\n        </Menu>\n      </Wrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}