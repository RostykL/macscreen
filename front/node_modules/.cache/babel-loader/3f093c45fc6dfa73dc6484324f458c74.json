{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { IngridientWrapper, IngridientButton, IngridientText, IngridientCount, JustWrapper } from \"./ingridientstyled\";\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index({\n  text,\n  initValue,\n  increase,\n  descrease,\n  ...props\n}) {\n  _s();\n\n  const [number, setNumber] = useState(initValue);\n  const {\n    burger,\n    setBurger\n  } = useContext(BurgerContext);\n  useEffect(() => {\n    let newBurger = burger.map(el => {\n      if (el.name === 'text') {\n        el.quantity = number;\n      }\n\n      return el;\n    });\n    setBurger(newBurger);\n  }, [number]);\n  return /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(IngridientText, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JustWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"red\",\n        onClick: () => setNumber(p => p > 0 ? p - 1 : 0),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientCount, {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"lightgreen\",\n        onClick: () => setNumber(p => p + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"A45cIEGpewJOjBNzDRj+8V2uF6A=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js"],"names":["React","useState","useEffect","useContext","IngridientWrapper","IngridientButton","IngridientText","IngridientCount","JustWrapper","BurgerContext","Index","text","initValue","increase","descrease","props","number","setNumber","burger","setBurger","newBurger","map","el","name","quantity","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AAEA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,WALF,QAMO,oBANP;AAQA,SAASC,aAAT,QAA8B,6BAA9B;;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,SAA7B;AAAwC,KAAGC;AAA3C,CAAf,EAAmE;AAAA;;AAC9E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACW,SAAD,CAApC;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBhB,UAAU,CAACM,aAAD,CAAxC;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,SAAS,GAAGF,MAAM,CAACG,GAAP,CAAWC,EAAE,IAAI;AAC/B,UAAGA,EAAE,CAACC,IAAH,KAAY,MAAf,EAAuB;AACrBD,QAAAA,EAAE,CAACE,QAAH,GAAcR,MAAd;AACD;;AACD,aAAOM,EAAP;AACD,KALe,CAAhB;AAMAH,IAAAA,SAAS,CAACC,SAAD,CAAT;AACD,GARQ,EAQN,CAACJ,MAAD,CARM,CAAT;AAUF,sBACE,QAAC,iBAAD;AAAA,4BACI,QAAC,cAAD;AAAA,gBAAiBL;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE,QAAC,WAAD;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,KAAtB;AAA6B,QAAA,OAAO,EAAE,MAAMM,SAAS,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAJ,GAAQA,CAAC,GAAG,CAAZ,GAAgB,CAAtB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAA,kBAAkBT;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,YAAtB;AAAoC,QAAA,OAAO,EAAE,MAAMC,SAAS,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAV,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzBuBf,K;;KAAAA,K","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\n\nimport {\n  IngridientWrapper,\n  IngridientButton,\n  IngridientText,\n  IngridientCount,\n  JustWrapper\n} from \"./ingridientstyled\";\n\nimport { BurgerContext } from \"../../context/burgerContext\";\n\n\nexport default function Index({ text, initValue, increase, descrease, ...props }) {\n    const [number, setNumber] = useState(initValue)\n    const { burger, setBurger } = useContext(BurgerContext);\n\n\n    useEffect(() => {\n      let newBurger = burger.map(el => {\n        if(el.name === 'text') {\n          el.quantity = number;\n        }\n        return el;\n      })\n      setBurger(newBurger)\n    }, [number])\n\n  return (\n    <IngridientWrapper>\n        <IngridientText>{text}</IngridientText>\n      <JustWrapper>\n        <IngridientButton bg={\"red\"} onClick={() => setNumber(p => p > 0 ? p - 1 : 0)}>-</IngridientButton>\n        <IngridientCount>{number}</IngridientCount>\n        <IngridientButton bg={\"lightgreen\"} onClick={() => setNumber(p => p + 1)}>+</IngridientButton>\n      </JustWrapper>\n    </IngridientWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}