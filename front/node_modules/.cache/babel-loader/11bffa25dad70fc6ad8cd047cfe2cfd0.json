{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { IngridientWrapper, IngridientButton, IngridientText, IngridientCount, JustWrapper } from \"./ingridientstyled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index({\n  text,\n  initValue,\n  increase,\n  descrease,\n  ...props\n}) {\n  _s();\n\n  const [number, setAdd] = useState(initValue);\n  return /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(IngridientText, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(JustWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"red\",\n        onClick: () => setAdd(p => p > 0 ? p - 1 : 0),\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientCount, {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"lightgreen\",\n        onClick: () => setAdd(p => p + 1),\n        children: \" + \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"wmpip+K4TA2ebAtf8MRpJDanqoY=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js"],"names":["React","useState","useEffect","IngridientWrapper","IngridientButton","IngridientText","IngridientCount","JustWrapper","Index","text","initValue","increase","descrease","props","number","setAdd","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,WALF,QAMO,oBANP;;AAQA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,SAA7B;AAAwC,KAAGC;AAA3C,CAAf,EAAmE;AAAA;;AAC9E,QAAM,CAACC,MAAD,EAASC,MAAT,IAAmBd,QAAQ,CAACS,SAAD,CAAjC;AACF,sBACE,QAAC,iBAAD;AAAA,4BACI,QAAC,cAAD;AAAA,gBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE,QAAC,WAAD;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,KAAtB;AAA6B,QAAA,OAAO,EAAE,MAAMM,MAAM,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAJ,GAAQA,CAAC,GAAG,CAAZ,GAAgB,CAAtB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAA,kBAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,YAAtB;AAAoC,QAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAZuBR,K;;KAAAA,K","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport {\n  IngridientWrapper,\n  IngridientButton,\n  IngridientText,\n  IngridientCount,\n  JustWrapper\n} from \"./ingridientstyled\";\n\nexport default function Index({ text, initValue, increase, descrease, ...props }) {\n    const [number, setAdd] = useState(initValue)\n  return (\n    <IngridientWrapper>\n        <IngridientText>{text}</IngridientText>\n      <JustWrapper>\n        <IngridientButton bg={\"red\"} onClick={() => setAdd(p => p > 0 ? p - 1 : 0)}> - </IngridientButton>\n        <IngridientCount>{number}</IngridientCount>\n        <IngridientButton bg={\"lightgreen\"} onClick={() => setAdd(p => p + 1)}> + </IngridientButton>\n      </JustWrapper>\n    </IngridientWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}