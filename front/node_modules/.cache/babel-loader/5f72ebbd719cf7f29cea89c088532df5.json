{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients } from './burgerredostyled';\nimport Ingridient from '../../component/Ingridient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index({\n  id\n}) {\n  _s();\n\n  const [cachedBurger, setCachedBurger] = useState(\"\");\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"burger\"))) {\n      setCachedBurger(JSON.parse(localStorage.getItem(\"burger\")));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: cachedBurger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngridients, {\n        children: [\"onion\", \"tomato\", \"pickle\", \"chicken\", \"bekon\", \"cheese\", \"egg\"].map(el => {\n          return /*#__PURE__*/_jsxDEV(Ingridient, {\n            text: el,\n            increase: () => {},\n            descrease: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"F9FMoCLY60Y7sX1J8nL9gFgCLAc=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","Wrapper","Menu","MenuTitle","BurgerIngridients","Ingridient","Index","id","cachedBurger","setCachedBurger","JSON","parse","localStorage","getItem","name","map","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,oBAAhC;AAEA,SAAQC,iBAAR,QAAgC,oBAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAuB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAJ,EAAgD;AAC9CJ,MAAAA,eAAe,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAD,CAAf;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAA,kBAAYL,YAAY,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAA,kBACK,CAAC,OAAD,EAAS,QAAT,EAAkB,QAAlB,EAA2B,SAA3B,EAAqC,OAArC,EAA6C,QAA7C,EAAsD,KAAtD,EAA6DC,GAA7D,CAAiEC,EAAE,IAAI;AACpE,8BACI,QAAC,UAAD;AAAY,YAAA,IAAI,EAAEA,EAAlB;AAAsB,YAAA,QAAQ,EAAE,MAAM,CAAE,CAAxC;AAA0C,YAAA,SAAS,EAAE,MAAM,CAAE;AAA7D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJA;AADL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtBuBV,K;;KAAAA,K","sourcesContent":["import React, {useEffect, useState } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\n\nimport {BurgerIngridients} from './burgerredostyled'\nimport Ingridient from '../../component/Ingridient'\n\nexport default function Index({ id }) {\n  const [cachedBurger, setCachedBurger] = useState(\"\");\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"burger\"))) {\n      setCachedBurger(JSON.parse(localStorage.getItem(\"burger\")));\n    }\n  }, []);\n  return (\n    <Wrapper>\n      <Menu>\n        <MenuTitle>{cachedBurger.name}</MenuTitle>\n        <BurgerIngridients>\n            {[\"onion\",\"tomato\",\"pickle\",\"chicken\",\"bekon\",\"cheese\",\"egg\"].map(el => {\n                return (\n                    <Ingridient text={el} increase={() => {}} descrease={() => {}}/>\n                );\n            })}\n        </BurgerIngridients>\n      </Menu>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}