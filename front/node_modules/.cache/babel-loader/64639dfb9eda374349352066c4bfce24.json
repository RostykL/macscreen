{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients, IngridientWrapper, BurgerDetails, DetailsTitle, IngridientsDetails, Total, DetailsButtonContinue } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  const burger = useSelector(state => state.burger);\n  const {\n    toppings,\n    error,\n    isLoading\n  } = useBurger(\"http://localhost:3000/toppings\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (burger.id) {\n      localStorage.setItem(\"burger\", JSON.stringify(burger));\n    } else {\n      let localStorageBurger = JSON.parse(localStorage.getItem(\"burger\"));\n      dispatch({\n        type: \"ADD_BURGER\",\n        payload: localStorageBurger\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(toppings, 'toppings');\n  }, [isLoading]);\n\n  const add = (text, num) => {\n    console.log(num);\n  }; // const sumOfToppings = () => {\n  //   let sum = 0;\n  //   for (let i = 0; i < allToppings.length; i++) {\n  //     sum += allToppings[i].cost * allToppings[i].quantity;\n  //   }\n  //   return sum;\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: burger && burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(BurgerIngridients, {\n          children: [].map(({\n            name,\n            quantity,\n            id\n          }) => {\n            return /*#__PURE__*/_jsxDEV(Ingridient, {\n              text: name,\n              add: add,\n              initValue: quantity\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BurgerDetails, {\n          children: [/*#__PURE__*/_jsxDEV(DetailsTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [burger && burger.name, \" | \\u0456\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0456\\u044F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(DetailsButtonContinue, {\n              children: \"\\u043F\\u0440\\u043E\\u0434\\u043E\\u0432\\u0436\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IngridientsDetails, {\n            children: [].filter(el => el.quantity > 0).map(el => {\n              return /*#__PURE__*/_jsxDEV(IngridientdetailBlock, {\n                text: el.name,\n                price: el.quantity * el.cost,\n                qty: el.quantity\n              }, el.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"WyOgbb54ALQkQ4rzVlPkuthlSO4=\", true, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","useContext","Wrapper","Menu","MenuTitle","BurgerIngridients","IngridientWrapper","BurgerDetails","DetailsTitle","IngridientsDetails","Total","DetailsButtonContinue","Ingridient","IngridientdetailBlock","useHistory","useDispatch","useSelector","Index","burger","state","toppings","error","isLoading","useBurger","dispatch","history","id","localStorage","setItem","JSON","stringify","localStorageBurger","parse","getItem","type","payload","console","log","add","text","num","name","map","quantity","filter","el","cost"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport {\n  BurgerIngridients,\n  IngridientWrapper,\n  BurgerDetails,\n  DetailsTitle,\n  IngridientsDetails,\n  Total,\n  DetailsButtonContinue,\n} from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Index() {\n  const burger = useSelector((state) => state.burger);\n  const { toppings, error, isLoading } = useBurger(\n    \"http://localhost:3000/toppings\"\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n\n  useEffect(() => {\n    if (burger.id) {\n      localStorage.setItem(\"burger\", JSON.stringify(burger));\n    } else {\n      let localStorageBurger = JSON.parse(localStorage.getItem(\"burger\"));\n      dispatch({ type: \"ADD_BURGER\", payload: localStorageBurger });\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(toppings, 'toppings')\n  }, [isLoading])\n\n  const add = (text, num) => {\n    console.log(num)\n  };\n\n  // const sumOfToppings = () => {\n  //   let sum = 0;\n  //   for (let i = 0; i < allToppings.length; i++) {\n  //     sum += allToppings[i].cost * allToppings[i].quantity;\n  //   }\n  //   return sum;\n  // };\n\n  return (\n    <Wrapper>\n      <Menu>\n        <MenuTitle>{burger && burger.name}</MenuTitle>\n        <IngridientWrapper>\n          <BurgerIngridients>\n            {[].map(({ name, quantity, id }) => {\n              return (\n                <Ingridient\n                  key={id}\n                  text={name}\n                  add={add}\n                  initValue={quantity}\n                />\n              );\n            })}\n          </BurgerIngridients>\n          <BurgerDetails>\n            <DetailsTitle>\n              <span>{burger && burger.name} | інформація</span>{\" \"}\n              <DetailsButtonContinue\n                \n              >\n                продовжити\n              </DetailsButtonContinue>\n            </DetailsTitle>\n            <IngridientsDetails>\n              {[]\n                .filter((el) => el.quantity > 0)\n                .map((el) => {\n                  return (\n                    <IngridientdetailBlock\n                      key={el.id}\n                      text={el.name}\n                      price={el.quantity * el.cost}\n                      qty={el.quantity}\n                    ></IngridientdetailBlock>\n                  );\n                })}\n            </IngridientsDetails>\n            {/* <Total>Загалом {sumOfToppings()}(грн.)</Total> */}\n          </BurgerDetails>\n        </IngridientWrapper>\n      </Menu>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}