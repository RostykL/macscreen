{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/toppings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index({\n  id\n}) {\n  _s();\n\n  const [cachedBurger, setCachedBurger] = useState(\"\");\n  const {\n    burger,\n    setBurger\n  } = useContext(BurgerContext);\n  const {\n    toppings,\n    error,\n    isLoading\n  } = useToppings(\"http://localhost:3000/toppings\", burger.consists_of);\n  useEffect(() => {\n    console.log(isLoading, error, toppings);\n  }, [isLoading, error, toppings]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n          children: burger && burger.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BurgerIngridients, {\n          children: \"loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isLoading) return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: burger && burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngridients, {\n        children: toppings && toppings.map(({\n          name,\n          quantity\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Ingridient, {\n            text: name,\n            initValue: quantity\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Index, \"vqD7abk9EuUrVFnIAao0GUx38Ms=\", false, function () {\n  return [useToppings];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","useContext","Wrapper","Menu","MenuTitle","BurgerIngridients","Ingridient","BurgerContext","useToppings","Index","id","cachedBurger","setCachedBurger","burger","setBurger","toppings","error","isLoading","consists_of","console","log","name","map","quantity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,oBAAhC;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAuB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBb,UAAU,CAACM,aAAD,CAAxC;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAiCT,WAAW,CAChD,gCADgD,EAEhDK,MAAM,CAACK,WAFyC,CAAlD;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuBD,KAAvB,EAA8BD,QAA9B;AACD,GAFQ,EAEN,CAACE,SAAD,EAAYD,KAAZ,EAAmBD,QAAnB,CAFM,CAAT;;AAIA,MAAIE,SAAJ,EAAe;AACb,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYJ,MAAM,IAAIA,MAAM,CAACQ;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,MAAI,CAACJ,SAAL,EACE,oBACE,QAAC,OAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAA,kBAAYJ,MAAM,IAAIA,MAAM,CAACQ;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAA,kBACGN,QAAQ,IACPA,QAAQ,CAACO,GAAT,CAAa,CAAC;AAAED,UAAAA,IAAF;AAAQE,UAAAA;AAAR,SAAD,KAAwB;AACnC,8BAAO,QAAC,UAAD;AAAqB,YAAA,IAAI,EAAEF,IAA3B;AAAiC,YAAA,SAAS,EAAEE;AAA5C,aAAiBb,EAAjB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaH;;GArCuBD,K;UAGiBD,W;;;KAHjBC,K","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\n\nimport { BurgerIngridients } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\n\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/toppings\";\n\nexport default function Index({ id }) {\n  const [cachedBurger, setCachedBurger] = useState(\"\");\n  const { burger, setBurger } = useContext(BurgerContext);\n  const { toppings, error, isLoading } = useToppings(\n    \"http://localhost:3000/toppings\",\n    burger.consists_of\n  );\n\n  useEffect(() => {\n    console.log(isLoading, error, toppings)\n  }, [isLoading, error, toppings]) \n\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger && burger.name}</MenuTitle>\n          <BurgerIngridients>loading...</BurgerIngridients>\n        </Menu>\n      </Wrapper>\n    );\n  }\n\n  if (!isLoading)\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger && burger.name}</MenuTitle>\n          <BurgerIngridients>\n            {toppings &&\n              toppings.map(({ name, quantity }) => {\n                return <Ingridient key={id} text={name} initValue={quantity} />;\n              })}\n          </BurgerIngridients>\n        </Menu>\n      </Wrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}