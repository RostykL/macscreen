{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/toppings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  const {\n    burger,\n    setBurger\n  } = useContext(BurgerContext);\n  const {\n    toppings,\n    error,\n    isLoading\n  } = useToppings(\"http://localhost:3000/toppings\", burger.consists_of);\n  useEffect(() => {\n    setBurger(JSON.parse(localStorage.getItem(\"burger\")));\n    console.log(toppings);\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n          children: burger && burger.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BurgerIngridients, {\n          children: [1, 2, 3, 4, 5].map(el => {\n            return /*#__PURE__*/_jsxDEV(Ingridient, {\n              text: \"Загрузка\",\n              initValue: 0\n            }, el, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!isLoading) return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BurgerIngridients, {\n        children: toppings && toppings.map(({\n          name,\n          quantity,\n          id\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Ingridient, {\n            text: name,\n            initValue: quantity\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Index, \"8AMseVUMQieTD3ejSJ0/bK5j/2M=\", false, function () {\n  return [useToppings];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","useContext","Wrapper","Menu","MenuTitle","BurgerIngridients","Ingridient","BurgerContext","useToppings","Index","burger","setBurger","toppings","error","isLoading","consists_of","JSON","parse","localStorage","getItem","console","log","name","map","el","quantity","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,oBAAhC;AAEA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBV,UAAU,CAACM,aAAD,CAAxC;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAiCN,WAAW,CAChD,gCADgD,EAEhDE,MAAM,CAACK,WAFyC,CAAlD;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS,CAACK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIE,SAAJ,EAAe;AACb,wBACE,QAAC,OAAD;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,SAAD;AAAA,oBAAYJ,MAAM,IAAIA,MAAM,CAACY;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,iBAAD;AAAA,oBACG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBC,GAAhB,CAAqBC,EAAD,IAAQ;AAC3B,gCAAO,QAAC,UAAD;AAAqB,cAAA,IAAI,EAAE,UAA3B;AAAuC,cAAA,SAAS,EAAE;AAAlD,eAAiBA,EAAjB;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,MAAI,CAACV,SAAL,EACE,oBACE,QAAC,OAAD;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAA,kBAAYJ,MAAM,CAACY;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,iBAAD;AAAA,kBACGV,QAAQ,IACPA,QAAQ,CAACW,GAAT,CAAa,CAAC;AAAED,UAAAA,IAAF;AAAQG,UAAAA,QAAR;AAAkBC,UAAAA;AAAlB,SAAD,KAA4B;AACvC,8BAAO,QAAC,UAAD;AAAqB,YAAA,IAAI,EAAEJ,IAA3B;AAAiC,YAAA,SAAS,EAAEG;AAA5C,aAAiBC,EAAjB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaH;;GAzCuBjB,K;UAEiBD,W;;;KAFjBC,K","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\n\nimport { BurgerIngridients } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\n\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport useToppings from \"../../hooks/toppings\";\n\nexport default function Index() {\n  const { burger, setBurger } = useContext(BurgerContext);\n  const { toppings, error, isLoading } = useToppings(\n    \"http://localhost:3000/toppings\",\n    burger.consists_of\n  );\n\n  useEffect(() => {\n    setBurger(JSON.parse(localStorage.getItem(\"burger\")));\n    console.log(toppings)\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger && burger.name}</MenuTitle>\n          <BurgerIngridients>\n            {[1, 2, 3, 4, 5].map((el) => {\n              return <Ingridient key={el} text={\"Загрузка\"} initValue={0} />;\n            })}\n          </BurgerIngridients>\n        </Menu>\n      </Wrapper>\n    );\n  }\n\n  if (!isLoading)\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger.name}</MenuTitle>\n          <BurgerIngridients>\n            {toppings &&\n              toppings.map(({ name, quantity, id }) => {\n                return <Ingridient key={id} text={name} initValue={quantity} />;\n              })}\n          </BurgerIngridients>\n        </Menu>\n      </Wrapper>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}