{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nexport default function useToppings(db_url, burger_toppings) {\n  _s();\n\n  const [toppings, setToppings] = useState([]);\n  const [error, setError] = useState({\n    msg: \"\",\n    status: false\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const difference = (toppings, my_toppings) => {\n    let arr = new Set();\n\n    for (let i = 0; i < toppings.length; i++) {\n      for (let j = 0; j < my_toppings.length; j++) {\n        if (toppings[i].name === my_toppings[j].name) {\n          arr.add(my_toppings[j].name); //qty = 1\n        } else {\n          arr.add(toppings[i].name); //qty = 0\n        }\n      }\n    }\n\n    return [...arr];\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(db_url).then(res => res.json()).then(res => {\n      let newToppings = difference(res, burger_toppings);\n      setToppings(newToppings);\n      setIsLoading(false);\n    }).catch(e => {\n      setIsLoading(true);\n      setError({\n        msg: \"Виникла помилка\" + e,\n        status: true\n      });\n    });\n  }, [db_url]);\n  return {\n    toppings,\n    error,\n    isLoading\n  };\n}\n\n_s(useToppings, \"nRei/rAeifAfAi9DbhtZfYd+wVs=\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/hooks/toppings.js"],"names":["React","useEffect","useState","useToppings","db_url","burger_toppings","toppings","setToppings","error","setError","msg","status","isLoading","setIsLoading","difference","my_toppings","arr","Set","i","length","j","name","add","fetch","then","res","json","newToppings","catch","e"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,eAA7B,EAA8C;AAAA;;AAC3D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AAAEQ,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE;AAAnB,GAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMY,UAAU,GAAG,CAACR,QAAD,EAAWS,WAAX,KAA2B;AAC5C,QAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACa,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAAW,CAACI,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;AAC3C,YAAId,QAAQ,CAACY,CAAD,CAAR,CAAYG,IAAZ,KAAqBN,WAAW,CAACK,CAAD,CAAX,CAAeC,IAAxC,EAA8C;AAC5CL,UAAAA,GAAG,CAACM,GAAJ,CAAQP,WAAW,CAACK,CAAD,CAAX,CAAeC,IAAvB,EAD4C,CACd;AAC/B,SAFD,MAEO;AACLL,UAAAA,GAAG,CAACM,GAAJ,CAAQhB,QAAQ,CAACY,CAAD,CAAR,CAAYG,IAApB,EADK,CACsB;AAC5B;AACF;AACF;;AACD,WAAO,CAAC,GAAGL,GAAJ,CAAP;AACD,GAZD;;AAcAf,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,IAAAA,KAAK,CAACnB,MAAD,CAAL,CACGoB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,UAAIE,WAAW,GAAGb,UAAU,CAACW,GAAD,EAAMpB,eAAN,CAA5B;AACAE,MAAAA,WAAW,CAACoB,WAAD,CAAX;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KANH,EAOGe,KAPH,CAOUC,CAAD,IAAO;AACZhB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,GAAG,EAAE,oBAAoBmB,CAA3B;AAA8BlB,QAAAA,MAAM,EAAE;AAAtC,OAAD,CAAR;AACD,KAVH;AAWD,GAbQ,EAaN,CAACP,MAAD,CAbM,CAAT;AAeA,SAAO;AAAEE,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBI,IAAAA;AAAnB,GAAP;AACD;;GAnCuBT,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function useToppings(db_url, burger_toppings) {\n  const [toppings, setToppings] = useState([]);\n  const [error, setError] = useState({ msg: \"\", status: false });\n  const [isLoading, setIsLoading] = useState(true);\n\n  const difference = (toppings, my_toppings) => {\n    let arr = new Set();\n    for (let i = 0; i < toppings.length; i++) {\n      for (let j = 0; j < my_toppings.length; j++) {\n        if (toppings[i].name === my_toppings[j].name) {\n          arr.add(my_toppings[j].name); //qty = 1\n        } else {\n          arr.add(toppings[i].name); //qty = 0\n        }\n      }\n    }\n    return [...arr];\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(db_url)\n      .then((res) => res.json())\n      .then((res) => {\n        let newToppings = difference(res, burger_toppings);\n        setToppings(newToppings);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        setIsLoading(true);\n        setError({ msg: \"Виникла помилка\" + e, status: true });\n      });\n  }, [db_url]);\n\n  return { toppings, error, isLoading };\n}\n"]},"metadata":{},"sourceType":"module"}