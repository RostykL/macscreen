{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { IngridientWrapper, IngridientButton, IngridientText, IngridientCount, JustWrapper } from \"./ingridientstyled\";\nimport { BurgerContext } from \"../../context/burgerContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index({\n  text,\n  initValue,\n  add,\n  ...props\n}) {\n  _s();\n\n  let [number, setNumber] = useState(initValue);\n  useEffect(() => {\n    if (number < 0) {\n      setNumber(0);\n    }\n  }, [number]);\n  return /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(IngridientText, {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(JustWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"red\",\n        onClick: () => {\n          setNumber(--number);\n          console.log(number);\n          add(text, number);\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientCount, {\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IngridientButton, {\n        bg: \"lightgreen\",\n        onClick: () => {\n          setNumber(++number);\n          console.log(number);\n          add(text, number);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"9Aw5BebC239PWtFAIVJ0UOswZww=\");\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/component/Ingridient/index.js"],"names":["React","useState","useEffect","useContext","IngridientWrapper","IngridientButton","IngridientText","IngridientCount","JustWrapper","BurgerContext","Index","text","initValue","add","props","number","setNumber","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AAEA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,WALF,QAMO,oBANP;AAQA,SAASC,aAAT,QAA8B,6BAA9B;;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,GAAnB;AAAwB,KAAGC;AAA3B,CAAf,EAAmD;AAAA;;AAChE,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACW,SAAD,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGa,MAAM,GAAG,CAAZ,EAAe;AACbC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF,GAJQ,EAIN,CAACD,MAAD,CAJM,CAAT;AAMA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,cAAD;AAAA,gBAAiBJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,EAAE,EAAE,KADN;AAEE,QAAA,OAAO,EAAE,MAAM;AACbK,UAAAA,SAAS,CAAC,EAAED,MAAH,CAAT;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAF,UAAAA,GAAG,CAACF,IAAD,EAAOI,MAAP,CAAH;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,eAAD;AAAA,kBAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,gBAAD;AACE,QAAA,EAAE,EAAE,YADN;AAEE,QAAA,OAAO,EAAE,MAAM;AACbC,UAAAA,SAAS,CAAC,EAAED,MAAH,CAAT;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAF,UAAAA,GAAG,CAACF,IAAD,EAAOI,MAAP,CAAH;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GArCuBL,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport {\n  IngridientWrapper,\n  IngridientButton,\n  IngridientText,\n  IngridientCount,\n  JustWrapper,\n} from \"./ingridientstyled\";\n\nimport { BurgerContext } from \"../../context/burgerContext\";\n\nexport default function Index({ text, initValue, add, ...props }) {\n  let [number, setNumber] = useState(initValue);\n\n  useEffect(() => {\n    if(number < 0) {\n      setNumber(0)\n    }\n  }, [number])\n\n  return (\n    <IngridientWrapper>\n      <IngridientText>{text}</IngridientText>\n      <JustWrapper>\n        <IngridientButton\n          bg={\"red\"}\n          onClick={() => {\n            setNumber(--number);\n            console.log(number)\n            add(text, number);\n          }}\n        >\n          -\n        </IngridientButton>\n        <IngridientCount>{number}</IngridientCount>\n        <IngridientButton\n          bg={\"lightgreen\"}\n          onClick={() => {\n            setNumber(++number);\n            console.log(number)\n            add(text, number);\n          }}\n        >\n          +\n        </IngridientButton>\n      </JustWrapper>\n    </IngridientWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}