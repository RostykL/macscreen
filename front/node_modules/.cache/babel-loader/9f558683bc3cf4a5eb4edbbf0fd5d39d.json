{"ast":null,"code":"var _jsxFileName = \"/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport { BurgerIngridients, IngridientWrapper, BurgerDetails, DetailsTitle, IngridientsDetails, Total, DetailsButtonContinue } from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useBurger } from \"../../hooks/useBurger\";\nimport { sumOfToppings } from \"../../helpers/sum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  const burger = useSelector(state => state.burger);\n  const [toppings, error, isLoading] = useBurger(\"http://localhost:3000/toppings\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    if (burger.id) {\n      localStorage.setItem(\"burger\", JSON.stringify(burger));\n    } else {\n      let localStorageBurger = JSON.parse(localStorage.getItem(\"burger\"));\n      dispatch({\n        type: \"ADD_BURGER\",\n        payload: localStorageBurger\n      });\n      alert('here');\n    }\n\n    for (let i = 0; i < toppings.length; i++) {\n      for (let j = 0; j < burger.consists_of.length; j++) {\n        if (burger.consists_of[j].name === toppings[i].name) {\n          toppings[i].quantity = burger.consists_of[j].quantity;\n        }\n      }\n    }\n\n    if (toppings.length > 0) {\n      dispatch({\n        type: \"ADD_BURGER\",\n        payload: { ...burger,\n          consists_of: toppings\n        }\n      });\n    }\n  }, [isLoading]);\n\n  const add = (text, num) => {\n    for (let i = 0; i < toppings.length; i++) {\n      if (toppings[i].name === text) {\n        toppings[i].quantity = num;\n      }\n    }\n\n    dispatch({\n      type: \"ADD_BURGER\",\n      payload: { ...burger,\n        consists_of: toppings\n      }\n    });\n    localStorage.setItem(\"burger\", JSON.stringify({ ...burger,\n      consists_of: toppings\n    }));\n  };\n\n  if (!isLoading) return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Menu, {\n      children: [/*#__PURE__*/_jsxDEV(MenuTitle, {\n        children: burger && burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IngridientWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(BurgerIngridients, {\n          children: burger.consists_of.map(({\n            name,\n            quantity,\n            id\n          }) => {\n            return /*#__PURE__*/_jsxDEV(Ingridient, {\n              text: name,\n              add: add,\n              initValue: quantity\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BurgerDetails, {\n          children: [/*#__PURE__*/_jsxDEV(DetailsTitle, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [burger && burger.name, \" | \\u0456\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0456\\u044F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(DetailsButtonContinue, {\n              onClick: () => {\n                dispatch({\n                  type: \"ADD_BURGER_BUCKET\",\n                  payload: { ...burger,\n                    cost: sumOfToppings(burger)\n                  }\n                });\n                history.push(\"/bucket\");\n              },\n              children: \"\\u043F\\u0440\\u043E\\u0434\\u043E\\u0432\\u0436\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IngridientsDetails, {\n            children: burger.consists_of.filter(el => el.quantity > 0).map(el => {\n              return /*#__PURE__*/_jsxDEV(IngridientdetailBlock, {\n                text: el.name,\n                price: el.quantity * el.cost,\n                qty: el.quantity\n              }, el.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Total, {\n            children: [\"\\u0417\\u0430\\u0433\\u0430\\u043B\\u043E\\u043C \", sumOfToppings(burger), \"(\\u0433\\u0440\\u043D.)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Index, \"HelCn3aSpXhy7eQB3/esX+kJyv4=\", false, function () {\n  return [useSelector, useBurger, useDispatch, useHistory];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/rostyk/Desktop/macscreen/front/src/pages/redo/index.js"],"names":["React","useEffect","useState","useContext","Wrapper","Menu","MenuTitle","BurgerIngridients","IngridientWrapper","BurgerDetails","DetailsTitle","IngridientsDetails","Total","DetailsButtonContinue","Ingridient","IngridientdetailBlock","useHistory","useDispatch","useSelector","useBurger","sumOfToppings","Index","burger","state","toppings","error","isLoading","dispatch","history","id","localStorage","setItem","JSON","stringify","localStorageBurger","parse","getItem","type","payload","alert","i","length","j","consists_of","name","quantity","add","text","num","map","cost","push","filter","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\n\nimport { Wrapper } from \"../../styled/general\";\nimport { Menu, MenuTitle } from \"../home/homestyled\";\nimport {\n  BurgerIngridients,\n  IngridientWrapper,\n  BurgerDetails,\n  DetailsTitle,\n  IngridientsDetails,\n  Total,\n  DetailsButtonContinue,\n} from \"./burgerredostyled\";\nimport Ingridient from \"../../component/Ingridient\";\nimport IngridientdetailBlock from \"../../component/IngridientsDetailBlock\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useBurger } from \"../../hooks/useBurger\";\n\nimport { sumOfToppings } from \"../../helpers/sum\";\n\nexport default function Index() {\n  const burger = useSelector((state) => state.burger);\n  const [toppings, error, isLoading] = useBurger(\n    \"http://localhost:3000/toppings\"\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (burger.id) {\n      localStorage.setItem(\"burger\", JSON.stringify(burger));\n    } else {\n      let localStorageBurger = JSON.parse(localStorage.getItem(\"burger\"));\n      dispatch({ type: \"ADD_BURGER\", payload: localStorageBurger });\n      alert('here')\n    }\n\n    for (let i = 0; i < toppings.length; i++) {\n      for (let j = 0; j < burger.consists_of.length; j++) {\n        if (burger.consists_of[j].name === toppings[i].name) {\n          toppings[i].quantity = burger.consists_of[j].quantity;\n        }\n      }\n    }\n\n    if (toppings.length > 0) {\n      dispatch({\n        type: \"ADD_BURGER\",\n        payload: { ...burger, consists_of: toppings },\n      });\n    }\n  }, [isLoading]);\n\n  const add = (text, num) => {\n    for (let i = 0; i < toppings.length; i++) {\n      if (toppings[i].name === text) {\n        toppings[i].quantity = num;\n      }\n    }\n    dispatch({\n      type: \"ADD_BURGER\",\n      payload: { ...burger, consists_of: toppings },\n    });\n    localStorage.setItem(\n      \"burger\",\n      JSON.stringify({ ...burger, consists_of: toppings })\n    );\n  };\n\n  if (!isLoading)\n    return (\n      <Wrapper>\n        <Menu>\n          <MenuTitle>{burger && burger.name}</MenuTitle>\n          <IngridientWrapper>\n            <BurgerIngridients>\n              {burger.consists_of.map(({ name, quantity, id }) => {\n                return (\n                  <Ingridient\n                    key={id}\n                    text={name}\n                    add={add}\n                    initValue={quantity}\n                  />\n                );\n              })}\n            </BurgerIngridients>\n            <BurgerDetails>\n              <DetailsTitle>\n                <span>{burger && burger.name} | інформація</span>{\" \"}\n                <DetailsButtonContinue\n                  onClick={() => {\n                    dispatch({\n                      type: \"ADD_BURGER_BUCKET\",\n                      payload: { ...burger, cost: sumOfToppings(burger) },\n                    });\n                    history.push(\"/bucket\");\n                  }}\n                >\n                  продовжити\n                </DetailsButtonContinue>\n              </DetailsTitle>\n              <IngridientsDetails>\n                {burger.consists_of\n                  .filter((el) => el.quantity > 0)\n                  .map((el) => {\n                    return (\n                      <IngridientdetailBlock\n                        key={el.id}\n                        text={el.name}\n                        price={el.quantity * el.cost}\n                        qty={el.quantity}\n                      ></IngridientdetailBlock>\n                    );\n                  })}\n              </IngridientsDetails>\n              <Total>Загалом {sumOfToppings(burger)}(грн.)</Total>\n            </BurgerDetails>\n          </IngridientWrapper>\n        </Menu>\n      </Wrapper>\n    );\n\n  if (isLoading) {\n    return <span>loading</span>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}